---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: streaming-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: streaming-core
  template:
    metadata:
      labels:
        app: streaming-core
    spec:
      volumes:
      - name: store-volume
        persistentVolumeClaim:
          claimName: streaming-pv-claim
      containers:
        - name: streaming-core
          image: docker.io/abarrak/streaming-system-streaming-core:0.3
          imagePullPolicy: IfNotPresent
          ports:
          - name: core-port
            containerPort: 9100
          volumeMounts:
          - mountPath: "/usr/file-store"
            name: store-volume
          env:
          - name: FileStorePath
            value: "/usr/file-store"
          - name: ASPNETCORE_URLS
            value: "http://+"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: encoding-core
spec:
  selector:
    matchLabels:
      app: encoding-core
  template:
    metadata:
      labels:
        app: encoding-core
    spec:
      volumes:
      - name: store-volume
        persistentVolumeClaim:
          claimName: streaming-pv-claim
      - name: store-db
        persistentVolumeClaim:
          claimName: db-pv-claim
      initContainers:
      - name: db-migrator
        image: abarrak/streaming-persistence:0.2.1
        imagePullPolicy: Always
        command: ["/bin/sh", "-c"]
        args:
        - sqlite3 database.db 'CREATE TABLE IF NOT EXISTS MediaFile (Id INTEGER PRIMARY KEY AUTOINCREMENT,Name VARCHAR(100) NOT NULL,Type VARCHAR(50) NOT NULL,Size DECIMAL(10, 2),FilePath TEXT NOT NULL,ManifestPath TEXT NOT NULL,Description TEXT,UploadedAt DATETIME,LockForEncoding INTEGER DEFAULT 0);' '.exit'
        volumeMounts:
        - mountPath: "/usr/db/"
          name: store-db
      containers:
      - name: encoding-core
        image: docker.io/abarrak/streaming-system-encoding-core:0.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
        volumeMounts:
        - mountPath: "/usr/file-store/"
          name: store-volume
        - mountPath: "/usr/db/"
          name: store-db
        env:
        - name: FileStorePath
          value: "/usr/file-store"
        - name: ConnectionStrings__Sqlite
          value: "Data Source=/usr/db/database.db"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      volumes:
      - name: store-volume
        persistentVolumeClaim:
          claimName: streaming-pv-claim
      - name: store-db
        persistentVolumeClaim:
          claimName: db-pv-claim
      containers:
      - name: web
        image: docker.io/abarrak/streaming-system-web:0.2
        imagePullPolicy: IfNotPresent
        ports:
        - name: web-port
          containerPort: 9200
        volumeMounts:
        - mountPath: "/usr/file-store/"
          name: store-volume
        - mountPath: "/usr/db/"
          name: store-db
        env:
        - name: FileStorePath
          value: "/usr/file-store"
        - name: ConnectionStrings__Sqlite
          value: "Data Source=/usr/db/database.db"
        - name: StreamingServerUrl
          value: http://$(CORE_SVC_SERVICE_HOST)
        - name: ASPNETCORE_URLS
          value: "http://+"
