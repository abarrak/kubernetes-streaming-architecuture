apiVersion: apps/v1
kind: Deployment
metadata:
  name: streaming-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: streaming-core
  template:
    metadata:
      labels:
        app: streaming-core
    spec:
      volumes:
      - name: store-volume
        persistentVolumeClaim:
          claimName: streaming-pv-claim
      containers:
        - name: streaming-core
          image: docker.io/abarrak/streaming-system-streaming-core:0.3
          imagePullPolicy: IfNotPresent
          ports:
          - name: core-port
            containerPort: 9100
          volumeMounts:
          - mountPath: "/usr/file-store"
            name: store-volume
          env:
          - name: FileStorePath
            value: "/usr/file-store"
          - name: ASPNETCORE_URLS
            value: "http://+"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: encoding-core
spec:
  selector:
    matchLabels:
      app: encoding-core
  template:
    metadata:
      labels:
        app: encoding-core
    spec:
      volumes:
      - name: store-volume
        persistentVolumeClaim:
          claimName: streaming-pv-claim
      - name: store-db
        persistentVolumeClaim:
          claimName: db-pv-claim
      initContainers:
      - name: db-migrator
        image: abarrak/streaming-persistence:0.2
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: "/usr/db/"
          name: store-db
      containers:
      - name: encoding-core
        image: docker.io/abarrak/streaming-system-encoding-core:0.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
        volumeMounts:
        - mountPath: "/usr/file-store/"
          name: store-volume
        - mountPath: "/usr/db/"
          name: store-db
        env:
        - name: FileStorePath
          value: "/usr/file-store"
        - name: ConnectionStrings__Sqlite
          value: "Data Source=/usr/db/database.db"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      volumes:
      - name: store-volume
        persistentVolumeClaim:
          claimName: streaming-pv-claim
      - name: store-db
        persistentVolumeClaim:
          claimName: db-pv-claim
      containers:
      - name: web
        image: docker.io/abarrak/streaming-system-web:0.2
        imagePullPolicy: IfNotPresent
        ports:
        - name: web-port
          containerPort: 9200
        volumeMounts:
        - mountPath: "/usr/file-store/"
          name: store-volume
        - mountPath: "/usr/db/"
          name: store-db
        env:
        - name: FileStorePath
          value: "/usr/file-store"
        - name: ConnectionStrings__Sqlite
          value: "Data Source=/usr/db/database.db"
        - name: StreamingServerUrl
          value: $(STREAMING-CORE-SVC_SERVICE_HOST)
        - name: ASPNETCORE_URLS
          value: "http://+"
---
apiVersion: v1
kind: Service
metadata:
  name: core-svc
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: core-port
  selector:
    app: streaming-core
---
apiVersion: v1
kind: Service
metadata:
  name: web-svc
spec:
  type: LoadBalancer
  ports:
  - port: 8050
    targetPort: web-port
  selector:
    app: web
